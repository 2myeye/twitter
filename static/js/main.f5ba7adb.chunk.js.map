{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/IndexRouter.js","components/App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","errorMSG","setErrorMSG","email","setEmail","password","setPassword","newAccount","setNewAccount","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onKeyPress","key","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Profile","refreshUser","userObj","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","marginTop","signOut","push","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","update","toggleEditing","attachmentUrl","src","alt","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","fileAttachment","setFileAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","isLoggedIn","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","IndexRouter","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ba7adb.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\nimport React, {useState} from 'react';\n\nconst AuthForm = () => {\n    const [errorMSG, setErrorMSG] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(true);\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (newAccount) {\n                //create account\n                await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (err) {\n            console.log(err);\n            setErrorMSG(err.message);\n        }\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'email') {\n            setEmail(value)\n        } else if (name === 'password') {\n            setPassword(value)\n        }\n    };\n    // when press enter, submit form\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            onSubmit();\n        }\n    }\n\n    const toggleAccount = () => {\n        setNewAccount((prev) => {\n            return !prev;\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className='container'>\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className='authInput'\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className='authInput'\n                />\n                <input\n                    type=\"submit\"\n                    value={newAccount ? \"Create Account\" : \"LogIn\"}\n                    onKeyPress={onKeyPress}\n                    className='authInput authSubmit'\n                />\n                {errorMSG && <span className='authError'>{errorMSG}</span>}\n            </form>\n            <span onClick={toggleAccount} className='authSwitch'>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </div>\n    )\n}\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\nimport { authService, firebaseInstance } from 'fbase';\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    // when you click social login button\n    const onSocialClick = async (e) => {\n        const { name } = e.target;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google\n                <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github\n                    <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;","import React, { useState } from 'react'\nimport { authService } from 'fbase'\nimport { useHistory } from 'react-router'\n\nconst Profile = ({ refreshUser, userObj }) => {\n\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n    }\n\n\n    const onChange = (e) => {\n        const { value } = e.target;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            //update name\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    type='text'\n                    placeholder='Display name'\n                    value={newDisplayName}\n                    autoFocus\n                    className='formInput'\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm('are you sure?');\n        if (ok) {\n            //delete tweet\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentURL).delete();\n        } else {\n            return false;\n        }\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    }\n\n    const onChange = (e) => {\n        const { value } = e.target;\n        setNewNweet(value);\n    }\n\n    const toggleEditing = () => {\n        setEditing(prev => {\n            return !prev;\n        })\n    }\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type='text'\n                            value={newNweet}\n                            placeholder=\"Edit your nweet\"\n                            onChange={onChange}\n                            required\n                            autoFocus\n                            className='formInput'\n                        />\n                        <input\n                            type='submit'\n                            value='update'\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=''/>}\n\n                        {isOwner && (\n                                <div className=\"nweet__actions\">\n                                    <span onClick={onDeleteClick}>\n                                        <FontAwesomeIcon icon={faTrash} />\n                                    </span>\n                                    <span onClick={toggleEditing}>\n                                        <FontAwesomeIcon icon={faPencilAlt} />\n                                    </span>\n                                </div>\n                            )}\n                    </>\n                )}\n        </div>\n    )\n}\n\nexport default Nweet;","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    //Home tweets saved in here\n    const [nweet, setNweet] = useState('');\n    //file url\n    const [fileAttachment, setFileAttachment] = useState('');\n\n    const onChange = (e) => {\n        const { value } = e.target\n        setNweet(value)\n    }\n\n    //submit tweet form\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (nweet === '') {\n            return;\n        }\n        let attachmentURL = '';\n        if (fileAttachment !== '') {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(fileAttachment, 'data_url');\n            attachmentURL = await attachmentRef.getDownloadURL();\n            console.log(response);\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentURL\n        }\n        await dbService.collection('nweets').add(nweetObj);\n        setNweet('');\n        setFileAttachment('');\n    };\n\n    const onFileChange = (e) => {\n        const { files } = e.target;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { result } = finishedEvent.currentTarget\n            setFileAttachment(result)\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => {\n        setFileAttachment('');\n    }\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {fileAttachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={fileAttachment}\n                        style={{\n                            backgroundImage: fileAttachment,\n                        }}\n                        alt=''\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default NweetFactory;","import React, { useState, useEffect } from 'react';\nimport { authService, dbService} from 'fbase';\nimport { useHistory } from 'react-router';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ isLoggedIn, userObj }) => {\n    const history = useHistory();\n    //get tweets from firebase\n    const [nweets, setNweets] = useState([]);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n    }\n\n    useEffect(() => {\n        dbService.collection('nweets').onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setNweets(nweetArray);\n        })\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{ marginTop: 30 }}>\n                {nweets.map(nweet =>\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n                <li>\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/profile\"\n                        style={{\n                            marginLeft: 10,\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                            {userObj.displayName\n                                ? `${userObj.displayName}의 Profile`\n                                : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport {\n    HashRouter as Router,\n    Redirect,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport {\n    Auth,\n    Home,\n    Profile\n} from 'routes';\nimport Navigation from 'components/Navigation';\n\n\nconst IndexRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                <>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path='/'>\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path='/profile'>\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        </div>\n                ) : (\n                        <>\n                            <Route exact path='/'>\n                                <Auth />\n                            </Route>\n                            <Redirect from=\"*\" to=\"/\" />\n                        </>\n                    )}\n                    </>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default IndexRouter;","import React, { useEffect, useState } from 'react';\nimport IndexRouter from 'components/IndexRouter';\nimport { authService } from \"fbase\";\n\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <div>\n      {init ?\n        <IndexRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj} /> : \"Initializing..\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from 'reportWebVitals';\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}